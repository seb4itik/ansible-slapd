- name: Create directory {{ suffix }}
  when: "'olcDbDirectory' in attributes"
  block:
    - name: Create directory {{ attributes.olcDbDirectory }}
      ansible.builtin.file:
        path: "{{ attributes.olcDbDirectory }}"
        state: "directory"
        owner: "{{ slapd_user }}"
        group: "{{ slapd_group }}"
        mode: "0750"
    - name: Stat apparmor file
      ansible.builtin.stat:
        path: "{{ slapd_apparmor_file }}"
      register: out_apparmor_file
    - name: Configure apparmor
      when: "out_apparmor_file.stat.exists"
      block:
        - name: Configure apparmor - directory {{ attributes.olcDbDirectory }}
          ansible.builtin.lineinfile:
            path: "{{ slapd_apparmor_file }}"
            regexp: "{{ attributes.olcDbDirectory }}\\/\\s+r,"
            line: "  {{ attributes.olcDbDirectory }}/ r,"
            state: "present"
            insertbefore: "^\\s*\\}\\s*$"
          register: out_apparmor1
        - name: Configure apparmor - content for directory {{ attributes.olcDbDirectory }}
          ansible.builtin.lineinfile:
            path: "{{ slapd_apparmor_file }}"
            regexp: "{{ attributes.olcDbDirectory }}\\/\\*\\*\\s+rwk,"
            line: "  {{ attributes.olcDbDirectory }}/** rwk,"
            state: "present"
            insertbefore: "^\\s*\\}\\s*$"
          register: out_apparmor2
        - name: Reload apparmor
          # We need to reload apparmor now to activate changed profile:
          # noqa: no-handler
          when: "out_apparmor1.changed or out_apparmor2.changed"
          ansible.builtin.service:
            name: "apparmor"
            state: "reloaded"

# Find suffix
- name: Search for suffix {{ suffix }}
  community.general.ldap_search:
    dn: "cn=config"
    filter: "(&(objectClass=olcDatabaseConfig)(olcSuffix={{ suffix }}))"
    scope: "children"
    attrs: ["dn"]
  ignore_errors: true
  register: out_suffix

# Suffix not found => creation
- name: Database creation {{ suffix }}
  when: "out_suffix.results | length == 0"
  community.general.ldap_entry:
    dn: "olcDatabase={999}{{ db_type }},cn=config"
    objectClass: "{{ slapd_backend_objectclass[db_type] }}"
    attributes: "{{ attributes }}"

# Suffix found => update
- name: Database configuration {{ suffix }}
  when: "out_suffix.results | length == 1"
  community.general.ldap_attrs:
    dn: "{{ out_suffix.results[0].dn }}"
    attributes: "{{ attributes }}"
    state: "exact"

- name: Create directory information tree
  when: "'root_record' in dit"
  block:

    - name: Create base DN
      community.general.ldap_entry:
        dn: "{{ suffix }}"
        objectClass: "{{ dit.root_record.objectClass }}"
        attributes: "{{ dit.root_record.attributes }}"

    - name: Create organizational units
      when: "'organizational_units' in dit"
      loop: "{{ dit.organizational_units | default([]) }}"
      loop_control:
        loop_var: "ou"
      community.general.ldap_entry:
        dn: "ou={{ ou }},{{ suffix }}"
        objectClass: "organizationalUnit"
        attributes:
          ou: "{{ ou }}"
